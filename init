#!/bin/busybox sh
#
# Example command line args:
#
#   root_lv=vgsys/lvroot usr_lv=vgsys/lvusr mount_usr=1 real_root=LABEL=/ usr=LABEL=/usr
#   root_lv=vgsys/lvroot usr_lv=vgsys/lvusr mount_usr=1 real_root=LABEL=/ usr=LABEL=/usr crypt=1 key_fs=LABEL=thumby key=/enc.key root_dev=sda1

cmdline() {
    local value
    value=" $(cat /proc/cmdline) "
    value="${value##* $1=}"
    value="${value%% *}"
    [ "$value" != "" ] && echo "$value"
}

rescue_shell() {
    echo "Something went wrong. Dropping you to a shell."
    busybox --install -s
    exec /bin/sh
}

echo "Mounting dev proc sys"
mount -t devtmpfs none /dev
mount -t proc none /proc
mount -t sysfs none /sys

echo "Parsing args"
root_lv=$(cmdline "root_lv")
: ${root_lv:="vgsys/lvroot"}
usr_lv=$(cmdline "usr_lv")
: ${usr_lv:="vgsys/lvusr"}
mount_usr=$(cmdline "mount_usr")
: ${mount_usr:=1}
root_fs=$(cmdline "real_root")
: ${root_fs:="LABEL=/"}
usr_fs=$(cmdline "usr")
: ${usr_fs:="LABEL=/usr"}
crypt=$(cmdline "crypt")
: ${crypt:=0}
key_fs=$(cmdline "key_fs")
: ${key_fs:=""}
key=$(cmdline "key")
: ${key:="/enc.key"}
root_dev=$(cmdline "root_dev")
: ${root_dev:="nvme0n1"}


if [ $crypt -eq 1 ]; then
    if [ -n $key_fs ]; then
        key_dev=
        while [ -z $key_dev ]; do
            sleep 1
            key_dev=$(findfs $key_fs)
        done
        mount -o ro $key_dev /mnt/tmp || rescue_shell
        $key=/mnt/tmp${key}
    fi
    echo "Decrypting root device"
    cryptsetup luksOpen -d $key /dev/$root_dev lvm || rescue_shell
    umount /mnt/tmp
fi

lvm vgscan --mknodes
echo "Enabling root lvm $root_lv"
lvm lvchange -aly $root_lv
if [ $mount_usr -eq 1 ]; then
    echo "Enabling usr lvm $usr_lv"
    lvm lvchange -aly $usr_lv
fi

echo "Mounting root $root_fs"
mount -o ro $(findfs $root_fs) /mnt/root || rescue_shell

if [ $mount_usr -eq 1 ]; then
    echo "Mounting usr $usr_fs for udev"
    mount -o rw $(findfs $usr_fs) /mnt/root/usr || rescue_shell
fi

echo "Cleaning up"
umount /proc
umount /sys
umount /dev

echo "Switching root"
exec switch_root /mnt/root /sbin/init
